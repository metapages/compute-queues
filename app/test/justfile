set shell := ["bash", "-c"]
set dotenv-load := true
set export := true

APP_PORT := env_var_or_default("APP_PORT", "443")
API_URL := "https://worker-metaframe.localhost:" + APP_PORT
normal := '\033[0m'
green := "\\e[32m"

@_help:
    just --list --unsorted --list-heading $'Testing commands:\n'

# Quick type check
@check:
    deno check src
    echo "✅ tests compilation"

watch mode="remote" +args="":
    #!/usr/bin/env bash
    if [ "{{ mode }}" = "remote" ]; then
        QUEUE_ID=remote API_URL={{ API_URL }} deno test --unsafely-ignore-certificate-errors --watch --allow-all --unstable-broadcast-channel --unstable-kv src/{{ args }}
    else
        QUEUE_ID=local API_URL=http://worker:8000 deno test --watch --unsafely-ignore-certificate-errors --allow-all --unstable-broadcast-channel --unstable-kv src/{{ args }}
    fi    

# Lint
@lint:
    deno lint

# Lint and fix issues
@lint-fix:
    deno lint --fix

# Format
@fmt:
    deno fmt

# Format check
@fmt-check:
    deno fmt --check

# Fix
@fix: lint-fix fmt

@test +args="":
    deno test --unsafely-ignore-certificate-errors --allow-all --unstable-broadcast-channel --unstable-kv src/{{ args }}
    echo "✅ functional tests"

@test-in-docker mode="remote" stack="test":
    cd ../.. && \
    APP_PORT={{ APP_PORT }} docker compose --project-name={{ stack }} -f docker-compose.yml -f docker-compose-{{ mode }}.yml -f docker-compose-test-{{ mode }}.yml run --no-deps --rm test deno test --unsafely-ignore-certificate-errors --allow-all src

# Run CI
@ci: fmt-check lint
