services:
  minio:
    depends_on:
      traefik: 
        condition: service_started
    image: minio/minio:RELEASE.2024-04-28T17-53-50Z
    command: server --address :9000 /data
    expose:
      - "9000"
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      MINIO_SERVER_URL: https://minio.worker-metaframe.localhost:${APP_PORT:-443}
      MINIO_REGION: ${AWS_REGION:-us-west-2}
      MINIO_ROOT_PASSWORD: minioaccesskey123123
      MINIO_ROOT_USER: minioaccesskey123123
    extra_hosts:
      - host.docker.internal:host-gateway
      - minio.worker-metaframe.localhost:host-gateway
    restart: always
    volumes:
      - .cache/minio:/data
    labels:
      - "custom.label=worker-metaframe.localhost"
      - "traefik.enable=true"
      - "traefik.http.routers.minio.rule=Host(`minio.worker-metaframe.localhost`)"
      - "traefik.http.routers.minio.entrypoints=websecure"
      # Apply the CORS middleware to the router
      - "traefik.http.routers.minio.middlewares=cors-middleware@file"

  denokv:
    image: ghcr.io/denoland/denokv
    command: --sqlite-path /data/denokv.sqlite serve --access-token localdenoaccesstoken
    volumes:
      - denokv:/data

  traefik:
    image: traefik:v2.11.13
    command:
      - --global.sendanonymoususage=false
      - --api.insecure=true
      - --api.dashboard=true
      - --providers.docker=true
      - --providers.docker.endpoint=unix:///var/run/docker.sock
      - --providers.docker.watch=true
      - --providers.docker.constraints=Label(`custom.label`,`worker-metaframe.localhost`)
      - --providers.docker.exposedbydefault=false
      - --providers.file.filename=/etc/traefik/config.yml
      - --providers.file.watch=true
      - --log.level=INFO
      - --log.format=common
      - --entrypoints.web.address=:80
      # Automatically redirecting HTTP to HTTPS
      # - --entrypoints.http.http.redirections.entryPoint.to=https
      # - --entrypoints.http.http.redirections.entryPoint.scheme=https
      - --entrypoints.websecure.address=:${APP_PORT:-443}
      - --entrypoints.websecure.http.tls=true
    labels:
     - "traefik.enable=true"
     - "traefik.http.routers.traefik=true"
    # Define the CORS middleware in the config.yml
    # I tried so hard to define it here but it would not work
    extra_hosts:
      - host.docker.internal:host-gateway
    ports:
      # The Traefik Web UI port (enabled by api:insecure: true in traefik.yml)
      # - "${TRAEFIK_WEB_UI_PORT:-8080}:8080"
      # HTTPS / SSL port
      - "${APP_PORT:-443}:${APP_PORT:-443}"
      # Disable the other ports to avoid conflicts
      # - "80:80"
    volumes:
      - .cache/traefik/certs:/etc/certs:ro
      - .traefik/config.yml:/etc/traefik/config.yml
      - /var/run/docker.sock:/var/run/docker.sock:ro

  redis:
    image: redis:7.2.4
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]

networks:
  default:
    driver: bridge

volumes:
  db:
    driver: local
  deno:
    driver: local
  denokv:
    driver: local
  node_modules:
    driver: local
  node_modules_worker:
    driver: local
