# Always use locally installed tools (always pin versions)
set shell                          := ["bash", "-c"]
set dotenv-load                    := true
# minimal formatting, bold is very useful
bold                  := '\033[1m'
normal                := '\033[0m'

@_help:
    just --list --unsorted --list-heading $'Worker Commands:\n'
    echo -e ""
    echo -e "        Example command to start a worker using a published docker image:"
    echo -e ""
    echo -e "            docker run --restart unless-stopped -tid \\"
    echo -e "                -v /var/run/docker.sock:/var/run/docker.sock \\"
    echo -e "                -v /tmp:/tmp metapage/metaframe-docker-worker:$(cat mod.json | jq -r '.version') run --cores=4 public1"
    echo -e ""
    echo -e "        Example commands to start a worker using local development code:"
    echo -e ""
    echo -e "            directly using deno:"
    echo -e ""
    echo -e "                just run --cores=1 --api-server-address=https://worker-metaframe.localhost local1"
    echo -e ""
    echo -e "            using the docker image (build and run):"
    echo -e ""
    echo -e "                just docker-image-run cache && \\"
    echo -e "                    run --cores=1 --api-server-address=https://worker-metaframe.localhost local1"
    echo -e ""

# Run the worker locally, using the local API server
@run +args="":
    deno run --allow-all --unsafely-ignore-certificate-errors src/cli.ts run {{args}}

# Quick type check
@check:
    deno check src/cli.ts
    echo "✅ worker typescript compilation"

@test:
    deno --allow-net --allow-read --allow-env --allow-write --allow-run test .
    echo "✅ worker unit tests"

@watch-and-test:
    deno test --trace-leaks --watch --allow-net --allow-read --allow-write --allow-env --allow-run .

# Build docker image
docker-image-build version="": 
    #!/usr/bin/env bash
    set -euo pipefail
    # echo "$DOCKER_TOKEN" | docker login --username metapage --password-stdin
    
    export VERSION={{version}}
    if [ "$VERSION" = "" ]; then
        export VERSION=$(cat mod.json | jq -r '.version')
    fi
    cd ../
    for arch in linux/amd64 linux/arm64  ; do 
        docker buildx build \
            --file worker/Dockerfile \
            --target worker \
            --platform $arch \
            --output type=docker \
            --tag metapage/metaframe-docker-worker:$VERSION \
            .
    done
    echo "✅ metapage/metaframe-docker-worker:$VERSION"


# Build and run a worker docker image, pointing to the local API
docker-image-run queue="local1": (docker-image-build "local")
    docker run --net=host --entrypoint ""  --rm -v /var/run/docker.sock:/var/run/docker.sock -v /tmp:/tmp metapage/metaframe-docker-worker:local deno run --allow-net --allow-read --allow-env --allow-run --unsafely-ignore-certificate-errors src/cli.ts run --cores=1 --api-server-address=https://worker-metaframe.localhost {{queue}}
